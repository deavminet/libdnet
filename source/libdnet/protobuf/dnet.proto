syntax="proto3";

//DNETMessage
//
//This is the container for all message types
message DNETMessage
{
    enum MessageType
    {
        // For all AccountMessage messages
        ACCOUNT = 0;

        // For all ChannelMessage messages
        CHANNEL = 1;

        // For all ServerMessage messages
        SERVER = 3;
    }

    // Type of message
    MessageType type = 1;

    // Message contents
    bytes content = 2;
}



// ChannelMessage
//
// These represent channel commands
message ChannelCommand
{
    enum MessageType
    {
        CREATE = 0;
        DESTROY = 1;
        JOIN = 2;
        LEAVE = 3;
        SET_PROP = 4;
        GET_PROPS = 5;
        GET_MEMBERS = 6;
        GET_PROP = 7;
    }

    // The type of channel command
    MessageType type = 0;

    // The channel to which the command applies
    string name = 1;

    // Additional data (dependent on command)
    bytes additionalData = 2;
}

// Channel/User Property
//
// Represents a channel/user property which is a mapping
// of a key to a value (bytes) of which its interpretation
// is solely up to the user
message Property
{
    // Property's name
    string name;

    // The property's data
    bytes data;
}



message ProfileDetails
{
    string username;
    string server;
    repeated UserProperty = 2;
}

message UserProperty
{
    string propertyName;
    bytes propertyData;
}